
//This file is only for some less useful entities. You don't need to install this FGD, but can if you prefer using certain things.
//To install this FGD: 
//1. Install SEP2.fgd.
//2. Put this file in the same place as it.
//3. Remove the "//" from the line that says "//@include "SEP2_legacy.fgd" " at the bottom of SEP2.fgd.
//Submit queries here: https://github.com/Pinsplash/SEFGD Even if you just have a question, it may help me improve this FGD.
//Wanna help me out? Search "TODO:" in this file.
//Derivatives are allowed to be made and distributed.
@PointClass base(Model,CBaseAnimating) color(255 203 11) studio() = cycler : "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps. This entity was used in Half-Life for models, so replace it with a prop_ entity."
[
]
@PointClass base(CBaseEntity,Angles,Parent) = env_lightrail_endpoint : "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps."
[
	spawnflags(Flags) = 
	[
		1 : "Start On (w/ Small FX)" : 0
		//2 : "Start With Large FX" : 0
	]

	small_fx_scale(float) : "Scale Small FX" : 1 : "Scale of the small effect.  1 is the default size, 2 is twice that, etc."

	large_fx_scale(float) : "Scale Large FX" : 1 : "Scale of the large effect.  1 is the default size, 2 is twice that, etc."

	// Inputs
	input StartCharge(float) : "Start charging the endpoint from the small to large state over a specified amount of seconds."
	input StartSmallFX(void) : "Start discharging particles at the small effects state over specified number of seconds."
	input StartLargeFX(void) : "Start discharging particles at the large effects state over specified number of seconds."	
	input Stop(float) : "Stops the effect at any point."
]
@PointClass base(CBaseEntity,Angles,Parent) cylinder(255 255 255, targetname, target, radius, targetname, targetname, radius) color(255 192 0) size(16 16 16) = env_portal_path_track : "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps. It's an unfinished variant of path_track which has a light beam going between the entities. In the final iteration of Portal, env_beam is used as the visual portion of the light beam."
[
	spawnflags(Flags) =
	[
		1:  "Disabled" : 0
		2:  "Fire once" : 0
		4:  "Branch Reverse" : 0
		8:  "Disable train" : 0
		16: "Teleport to THIS path track" : 0
	]

	Track_beam_scale(float):"Scale Track FX": 0 :"The amount to scale the track FX size"
	End_point_scale(float) : "Scale Endpoint FX" : 0 : "The amount to scale the endpoint FX size."
	End_point_fadeout(float):"Fade Out Endpoint": 0 :"Amount of time to fade out the endpoint FX"
	End_point_fadein(float):"Fade In Endpoint": 0 :"Amount of time to fade in the endpoint FX"
	target(target_destination) : "Next Stop Target" :  : "The next path_track in the path."
	altpath(target_destination) : "Branch Path" : : "An alternative path_track to be the next node in the path. Useful for making branching paths. Use the ToggleAlternatePath / EnableAlternatePath inputs to make the alternative path active."
	speed(float) : "New Train Speed" : 0 : "When the train reaches this path_track, it will set its speed to this speed. "+
		"This speed must be a positive value that is less than the train's max speed. A value of 0 will cause no change in the train's speed."
	radius(float) : "Path radius" : 0 : "Used by NPCs who follow track paths (attack chopper/gunship). This tells them the maximum distance they're allowed to be from the path at this node."

	orientationtype(choices) : "Orientation Type" : 1 : "The way that the path follower faces as it moves through this path track." =
	[
		0 : "No change"
		1 : "Face direction of motion"
		2 : "Face this path_track's angles"
	]

	// Inputs
	input ToggleAlternatePath(void) : "Cause the track to toggle to/from its alternate path."
	input EnableAlternatePath(void) : "Enable the alternate path of the track."
	input DisableAlternatePath(void) : "Disable the alternate path of the track."

	input TogglePath(void) : "Cause the track to toggle on/off/"
	input EnablePath(void) : "Enable the track."
	input DisablePath(void) : "Disable the track."

	input ActivateTrackFX(void) : "Turn on the track's fx beam"
	input ActivateEndPointFX(void) : "Turn on the endpoint's fx"
	input DeactivateTrackFX(void) : "Turn off the track's fx beam"
	input DeactivateEndPointFX(void) : "Turn off the endpoint's fx"

	// Outputs
	output OnPass(void) : "Fired when any entity following this path passes this path_track node."
]
@SolidClass base(CBaseEntity,VisibleBrush) color(255 0 255) = func_conveyor : "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps. It's a conveyor belt that may look convincing when given a scrolling texture. You should use a prop and a trigger_push instead. This entity is known to cause hitbox issues."
[
	spawnflags(flags) =
	[
		1 : "No Push - Makes the conveyor not move things that touch it." : 0
		2 : "Not Solid - Make the conveyor untouchable, therefore preventing it from moving anything." : 0
	]
	movedir(angle) : "Move Direction (Pitch Yaw Roll)" : "0 0 0" : "Direction in which things move when on the conveyor. Changing this with AddOutput is possible but tricky because this keyvalue becomes a normalized vector after spawning."
	speed(float) : "Conveyor Speed" : 100 : "How fast to move things that are on the conveyor."
	input ToggleDirection(void) : "Changes the direction the conveyor pushes in by switching Conveyor Speed between negative and positive."
]
@SolidClass base(CBaseEntity,VisibleBrush) color(255 203 11) = func_illusionary : "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps. This entity was used in Half-Life for non-solid brushes. Use func_brush instead."
[
]
@SolidClass base(CBaseEntity,VisibleBrush) color(0 180 0) = func_lod : "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps. This entity used to be needed as an optimization which would fade brushes away when not near them. This is no longer useful as checking the distance from camera to brush, and rendering the brush translucently, is slower than drawing the brush opaquely as world/detail."
[
	DisappearDist(float) : "Disappear Distance" : 2000 : "Distance at which the brush starts to fade out."
	Solid(choices) : "Solid" : 0 : "Set whether or not the brush should collide with other entities." =
	[
		0 : "Solid"
		1 : "Nonsolid"
	]
]
@SolidClass base(CBaseEntity,Origin,VisibleBrush) = func_platrot : "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps. This entity was used in Half-Life for brushes that could rotate while moving up and down at the same time, so use func_tracktrain instead."
[
	spawnflags(flags) =
	[
		64 : "X Axis - Makes the entity rotate on its X axis instead of Z. It will still move along the Z axis." : 0
		128 : "Y Axis - Makes the entity rotate on its Y axis instead of Z. It will still move along the Z axis." : 0
	]
	speed(float) : "Speed" : 100 : "How fast to move up or down, in units per second. NOTE: The speed at which the entity spins is automatically set by this so that the entity will move and rotate for the exact same amount of time. (Originally named 'Speed of Rotation', misleading.)"
	rotation(float) : "Spin amount" : 90 : "How much the brush should spin."
]
@SolidClass base(func_tracktrain) = func_tanktrain : "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps. This entity is buggy and doesn't do what it's supposed to do. You should really use func_tracktrain instead."
[
]
@SolidClass base(func_platrot) = func_trackchange : "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps. This entity was used in Half-Life for platforms that carry a func_tracktrain to another track. You should use another func_tracktrain instead."
[
	height(integer) : "Travel Altitude" : 0 : "The vertical height above the track that the train moves. Negative values moves the train below."
	spawnflags(flags) =
	[
		1: "Auto Activate train" : 0
		2: "Relink track" : 0
		8: "Start at Bottom" : 0
		16: "Rotate Only" : 0
		64: "X Axis" : 0
		128: "Y Axis" : 0
	]
	train(target_destination) : "Train to Switch"			// NEEDHELP
	toptrack(target_destination) : "Top Track"				// NEEDHELP
	bottomtrack(target_destination) : "Bottom Track"		// NEEDHELP
]
@SolidClass base(func_trackchange) = func_trackautochange : "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps. This entity was used in Half-Life for platforms that carry a func_tracktrain to another track. You should use another func_tracktrain instead."
[
	input Trigger(void) : "Trigger the track change."
]
@SolidClass base(CBaseEntity,VisibleBrush) = func_wall : "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps. This entity was basically Half-Life's version of func_brush. Use func_brush instead."
[
]
@SolidClass base(CBaseEntity,VisibleBrush) = func_wall_toggle : "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps. This entity was basically Half-Life's version of func_brush. Use func_brush instead."
[
	spawnflags(flags) =
	[
		1 : "Starts Invisible" : 0
	]

	// Inputs
	input Toggle(void) : "Toggle the brush on/off. When off, the brush will be non-solid and invisible."
]
@PointClass base(CBaseEntity) color(0 180 0) = game_gib_manager : "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps. This entity is a pointlessly excessive optimization technique. It limits how many gibs there can be on the map. Gibs almost always clean themselves up after a certain amount of time."
[
	maxpieces(integer) : "Max Gib Count" : -1 : "How many gibs there can be in the map at once. -1 means no limit."
	allownewgibs(boolean) : "Allow New Gibs To Spawn" : 1 : "If true, when the max gib count is reached, oldest gibs are removed as new gibs spawn. If false, new gibs will not be spawned once the gib limit is reached."
	input SetMaxPieces(integer) : "Sets Max Gib Count."
]
@PointClass base(CBaseEntity,Parent) iconsprite("editor/info_target") = info_target_instructor_hint : "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps. This entity can be replaced with an info_target that always transmits to clients."
[
]
@PointClass base(CBaseEntity) studio("models/editor/playerstart.mdl") = info_teleport_destination : "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps. This entity used to be needed for trigger_teleport's destination. Use info_target."
[
]
@PointClass base(CBaseEntity,EnableDisable) color(248 155 0) = logic_achievement : "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps. This entity is used for achievements. You can't make your own achievements unless you get your mod on Steam."
[
	achievementname(string) : "Achievement Name" : ""
	input Toggle(void) : "Toggle the relay between enabled and disabled."
	input FireEvent(void) : "Tells the achievement system the specifed event has occured."
	input SetTargetPlayer(target_destination) : "Set the player who will be awarded this achievement."
	output OnFired(void) : "When the event fires, this fires."
]
@PointClass base(CPhysForce) color(255 0 255) = phys_torque : "Spins an object. phys_motor and phys_thruster give the same function with more options."
[
	axis(vecline) : "Rotation Axis" :  : "Axis to rotate the object around."
]
@PointClass base(CBaseAnimating) color(0 255 255) studioprop() = vehicle_viewcontroller : "OBSOLETE: You shouldn't use this entity, though it may appear in other people's maps. It's an entity used to control the player's view while giving them realistic motion. Use prop_vehicle_choreo_generic instead; it has more features."
[
	vehiclescript(string) : "Vehicle Script File" :  : "A file in scripts/vehicles/ with information about the vehicle."
	input ForcePlayerIn(string) : "Puts the player in the view-controlling vehicle. The parameter is the name of the entry animation to use. This does not work correctly in multiplayer. It will only act on the first player that joined the server."
	input ForcePlayerOut(void) : "Takes the player out of the vehicle."
	output PlayerOn(void) : "Fires when the player enters the vehicle. Activator is that player."
	output PlayerOff(void) : "Fires when the player leaves the vehicle. Activator is that player."
	output PressedAttack(void) : "Fires when the driver starts using their primary fire (+attack)."
	output PressedAttack2(void) : "Fires when the driver starts using their secondary fire (+attack2)."
	output AttackAxis(integer) : "Fires constantly when a driver is in the vehicle. Automatically puts 0 or 1, depending on if the driver is using their primary fire, as the input parameter, unless overridden by the mapper."
	output Attack2Axis(integer) : "Fires constantly when a driver is in the vehicle.  Automatically puts 0 or 1, depending on if the driver is using their secondary fire, as the input parameter, unless overridden by the mapper."
]
